{"version":3,"sources":["components/Card.js","components/Navbar.js","images/charizard.png","images/abra.png","images/bulbasaur.png","images/charmander.png","images/cubone.png","images/meowth.png","images/mew.png","images/mewtwo.png","images/odish.png","images/pidgey.png","images/spearow.png","images/squirtle.png","components/Score.js","components/CardBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","poke","pickCard","onClick","onKeyDown","tabIndex","onKeyPress","onKeyUp","role","className","id","name","alt","src","img","Navbar","Score","currentScore","bestScore","CardBox","cards","domCards","map","card","App","useState","score","setScore","best","setBest","charizard","abra","bullbas","charmander","cubone","meowth","odish","pidgey","mew","mewtwo","spearow","squirtle","pokes","pickedPokes","setPickedPokes","lastPickedPokes","setLastPickedPokes","isGameFinish","setIsGameFinish","useEffect","length","myPickedPokes","push","controlCard","i","j","Math","floor","random","temp","randomizePokes","type","e","target","parentElement","status","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d33cc9a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Card(props) {\r\n  const { poke, pickCard } = props;\r\n\r\n  return (\r\n    <div onClick={pickCard} onKeyDown={() => {}} tabIndex=\"0\" onKeyPress={() => {}} onKeyUp={() => {}} role=\"button\" className=\"card\" id={poke.name}>\r\n      <img alt={poke.name} src={poke.img} />\r\n      <h3>\r\n        {' '}\r\n        {poke.name}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      Memory Game\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/charizard.b88a9e62.png\";","export default __webpack_public_path__ + \"static/media/abra.ed345cf7.png\";","export default __webpack_public_path__ + \"static/media/bulbasaur.ba0cdb07.png\";","export default __webpack_public_path__ + \"static/media/charmander.dbf41ada.png\";","export default __webpack_public_path__ + \"static/media/cubone.925761ab.png\";","export default __webpack_public_path__ + \"static/media/meowth.76f0e264.png\";","export default __webpack_public_path__ + \"static/media/mew.e7ea981c.png\";","export default __webpack_public_path__ + \"static/media/mewtwo.8fe6ab09.png\";","export default __webpack_public_path__ + \"static/media/odish.55a5a71e.png\";","export default __webpack_public_path__ + \"static/media/pidgey.fe274108.png\";","export default __webpack_public_path__ + \"static/media/spearow.42eb22ba.png\";","export default __webpack_public_path__ + \"static/media/squirtle.82485156.png\";","import React from 'react';\r\n\r\nfunction Score(props) {\r\n  const { currentScore, bestScore } = props;\r\n  return (\r\n    <div className=\"scoreBoard\">\r\n      <div className=\"currentScore\">\r\n        {' '}\r\n        Score :\r\n        {' '}\r\n        {currentScore}\r\n        {' '}\r\n      </div>\r\n      <div className=\"bestScore\">\r\n        {' '}\r\n        Best :\r\n        {' '}\r\n        {bestScore}\r\n        {' '}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nfunction CardBox(props) {\r\n  const { cards, pickCard } = props;\r\n\r\n  const domCards = cards.map((card) => (\r\n    <Card pickCard={pickCard} key={card.name} poke={card} />\r\n  ));\r\n  return (\r\n    <div className=\"cardBox\">\r\n      {domCards}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardBox;\r\n","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport Card from './components/Card';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport charizard from './images/charizard.png';\nimport abra from './images/abra.png';\nimport bullbas from './images/bulbasaur.png';\nimport charmander from './images/charmander.png';\nimport cubone from './images/cubone.png';\nimport meowth from './images/meowth.png';\nimport mew from './images/mew.png';\nimport mewtwo from './images/mewtwo.png';\nimport odish from './images/odish.png';\nimport pidgey from './images/pidgey.png';\nimport spearow from './images/spearow.png';\nimport squirtle from './images/squirtle.png';\nimport Score from './components/Score';\nimport CardBox from './components/CardBox';\n\nfunction App() {\n  const [score, setScore] = useState(0);\n  const [best, setBest] = useState(0);\n  const [isFinish, setFinis] = useState(false);\n  const [pokes, setPokes] = useState([\n    {\n      name: 'charizard',\n      img: charizard,\n    },\n    {\n      name: 'abra',\n      img: abra,\n    },\n    {\n      name: 'bulbasar',\n      img: bullbas,\n    },\n    {\n      name: 'charmander',\n      img: charmander,\n    },\n    {\n      name: 'cubone',\n      img: cubone,\n    },\n    {\n      name: 'meowth',\n      img: meowth,\n    },\n    {\n      name: 'odish',\n      img: odish,\n    },\n    {\n      name: 'pidgey',\n      img: pidgey,\n    },\n    {\n      name: 'mew',\n      img: mew,\n    },\n    {\n      name: 'mewtwo',\n      img: mewtwo,\n    },\n    {\n      name: 'spearow',\n      img: spearow,\n    },\n    {\n      name: 'squirtle',\n      img: squirtle,\n    },\n  ]);\n  const [pickedPokes, setPickedPokes] = useState([]);\n  const [lastPickedPokes, setLastPickedPokes] = useState('');\n  const [isGameFinish, setIsGameFinish] = useState(false);\n\n  function randomizePokes() {\n    for (let i = pokes.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = pokes[i];\n      pokes[i] = pokes[j];\n      pokes[j] = temp;\n    }\n  }\n\n  function controlCard(name) {\n    const myPickedPokes = [...pickedPokes];\n    myPickedPokes.push(name);\n    setPickedPokes(myPickedPokes);\n  }\n\n  function checkScore() {\n    if (score >= best) {\n      setBest(score);\n    }\n  }\n\n  function restartGame() {\n    setIsGameFinish(false);\n    setScore(0);\n    setBest(0);\n    setPickedPokes([]);\n    setLastPickedPokes('');\n  }\n\n  function checkGame() {\n    if (best === pokes.length) {\n      setIsGameFinish(true);\n    }\n  }\n  useEffect(() => {\n    checkGame();\n  }, [best]);\n\n  useEffect(() => {\n    checkScore();\n  }, [score]);\n\n  useEffect(() => {\n    controlCard(lastPickedPokes);\n    randomizePokes();\n  }, [lastPickedPokes]);\n\n  function pickCard(e) {\n    let { target } = e;\n    if (target.className !== 'card') {\n      target = target.parentElement;\n    }\n    let status = true;\n    pickedPokes.forEach((poke) => {\n      if (poke === target.id) {\n        status = false;\n      }\n    });\n\n    if (status) {\n      setScore(score + 1);\n      setLastPickedPokes(target.id);\n    } else {\n      setScore(0);\n      setPickedPokes([]);\n      setLastPickedPokes('');\n    }\n  }\n  return (\n    !isGameFinish ? (\n      <div className=\"App\">\n        <Navbar />\n        <CardBox pickCard={pickCard} cards={pokes} />\n        <Score currentScore={score} bestScore={best} />\n\n      </div>\n    ) : (\n      <div className=\"finish\">\n        <h3> You win ! </h3>\n        <button type=\"button\" onClick={restartGame}> Play Again </button>\n      </div>\n    )\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}